/*! Personal Inventory Tracker Enhanced */
var PITOcr=(()=>{var f=Object.create;var i=Object.defineProperty;var l=Object.getOwnPropertyDescriptor;var w=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty;var g=(e=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(e,{get:(n,t)=>(typeof require!="undefined"?require:n)[t]}):e)(function(e){if(typeof require!="undefined")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')});var m=(e,n)=>{for(var t in n)i(e,t,{get:n[t],enumerable:!0})},a=(e,n,t,r)=>{if(n&&typeof n=="object"||typeof n=="function")for(let o of w(n))!p.call(e,o)&&o!==t&&i(e,o,{get:()=>n[o],enumerable:!(r=l(n,o))||r.enumerable});return e};var y=(e,n,t)=>(t=e!=null?f(u(e)):{},a(n||!e||!e.__esModule?i(t,"default",{value:e,enumerable:!0}):t,e)),x=e=>a(i({},"__esModule",{value:!0}),e);var b={};m(b,{bindOcrToInput:()=>h,extractItemSuggestions:()=>d,loadTesseract:()=>c});var s;function c(){return s||(s=import("./tesseract.esm.min.js").catch(e=>{throw console.error("Tesseract failed to load.",e),new Error("Failed to load OCR engine. Please check plugin installation.")})),s}async function d(e,n=60){if(typeof window=="undefined")return console.warn("OCR is only supported in browser environments."),[];try{let t=await c(),{data:r}=await t.recognize(e,"eng");return r.lines.filter(o=>o.confidence>=n).map(o=>({text:o.text.trim(),confidence:o.confidence}))}catch(t){return console.warn(t.message),typeof window!="undefined"&&alert(t.message),[]}}function h(e,n,t=60){if(typeof window=="undefined"){console.warn("OCR binding skipped: not in a browser");return}e.addEventListener("change",async()=>{let[r]=e.files;if(r){let o=await d(r,t);n(o)}})}return x(b);})();
