name: CI

on:
  push:
  pull_request:

jobs:
  composer-audit:
    name: Composer Audit
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: ['8.1', '8.2']
    steps:
      - uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: none
          tools: composer
      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: |
            vendor
            ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ matrix.php-version }}-${{ hashFiles('composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-${{ matrix.php-version }}-
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-interaction
      - name: Composer audit
        run: composer audit

  phpcs:
    name: PHPCS
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: ['8.1', '8.2']
    steps:
      - uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: none
          tools: composer
      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: |
            vendor
            ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ matrix.php-version }}-${{ hashFiles('composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-${{ matrix.php-version }}-
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-interaction
      - name: Run PHPCS
        run: vendor/bin/phpcs

  phpstan:
    name: PHPStan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: ['8.1', '8.2']
    steps:
      - uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: none
          tools: composer
      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: |
            vendor
            ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ matrix.php-version }}-${{ hashFiles('composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-${{ matrix.php-version }}-
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-interaction
      - name: Run PHPStan
        run: vendor/bin/phpstan

  phpunit:
    name: PHPUnit
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: ['8.1', '8.2']
    steps:
      - uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: none
          tools: composer
      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: |
            vendor
            ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ matrix.php-version }}-${{ hashFiles('composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-${{ matrix.php-version }}-
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-interaction
      - name: Run PHPUnit
        run: vendor/bin/phpunit

  e2e:
    name: Playwright Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['18', '20']
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ matrix.node-version }}-${{ hashFiles('package-lock.json') }}
          restore-keys: ${{ runner.os }}-npm-${{ matrix.node-version }}-
      - name: Install dependencies
        run: npm ci
      - name: Run Playwright tests
        run: npx playwright test
